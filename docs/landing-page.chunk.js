"use strict";(self.webpackChunkai_chan_landing=self.webpackChunkai_chan_landing||[]).push([[776],{2691:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("{// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ landing)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(6540);\n// EXTERNAL MODULE: ./node_modules/react-swipeable-views/lib/index.js\nvar lib = __webpack_require__(7400);\n// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js + 20 modules\nvar makeStyles = __webpack_require__(9900);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/green.js\nvar green = __webpack_require__(4843);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/yellow.js\nvar yellow = __webpack_require__(586);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/purple.js\nvar purple = __webpack_require__(9668);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/orange.js\nvar orange = __webpack_require__(8544);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/colors/grey.js\nvar grey = __webpack_require__(9169);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Grid/Grid.js\nvar Grid = __webpack_require__(7606);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Typography/Typography.js\nvar Typography = __webpack_require__(4392);\n;// ./src/asset/img/character/ai-chan.png\nconst ai_chan_namespaceObject = __webpack_require__.p + \"e70e52a7afc820d4e460.png\";\n;// ./src/asset/img/avatar/ai-chan.png\nconst avatar_ai_chan_namespaceObject = __webpack_require__.p + \"b5ca5aa588546cce81e8.png\";\n;// ./src/asset/img/character/kiana.png\nconst kiana_namespaceObject = __webpack_require__.p + \"01630c5ad47b8ceb86cb.png\";\n;// ./src/asset/img/avatar/kiana.png\nconst avatar_kiana_namespaceObject = __webpack_require__.p + \"51e63a2035aa99822bcd.png\";\n;// ./src/asset/img/character/mei.png\nconst mei_namespaceObject = __webpack_require__.p + \"328ee538cc8bb2e35acf.png\";\n;// ./src/asset/img/avatar/mei.png\nconst avatar_mei_namespaceObject = __webpack_require__.p + \"baa0677a51b41caee7f6.png\";\n;// ./src/asset/img/character/bronya.png\nconst bronya_namespaceObject = __webpack_require__.p + \"cbd9285bbaefdf694106.png\";\n;// ./src/asset/img/avatar/bronya.png\nconst avatar_bronya_namespaceObject = __webpack_require__.p + \"462ae9c0c9bc5eff160a.png\";\n;// ./src/asset/img/honkai-impact.png\nconst honkai_impact_namespaceObject = __webpack_require__.p + \"ff5da47c50f92e32551f.png\";\n;// ./src/asset/img/discord.png\nconst discord_namespaceObject = __webpack_require__.p + \"5de04f93d4e03aa4b51c.png\";\n// EXTERNAL MODULE: ./src/client/store/screen.tsx\nvar screen = __webpack_require__(7858);\n;// ./src/client/components/common/header-blocks.tsx\n\n\n\n\n\n\nvar useStyles = (0,makeStyles/* default */.A)(function (theme) {\n    var _a, _b, _c, _d;\n    return ({\n        headerContainer: {\n            position: 'relative',\n            display: 'flex',\n            transition: 'margin 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n        },\n        headerBlock: (_a = {\n                width: '100vw',\n                minHeight: '350px',\n                display: 'flex',\n                flexDirection: 'row-reverse',\n                justifyContent: 'center',\n                alignItems: 'center',\n                overflow: 'hidden'\n            },\n            _a[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                flexDirection: 'column-reverse'\n            },\n            _a),\n        headerText: (_b = {\n                textAlign: 'right'\n            },\n            _b[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                textAlign: 'center'\n            },\n            _b),\n        headerTextFont: {\n            fontFamily: 'Righteous',\n            lineHeight: '0.8em',\n            margin: '24px 0'\n        },\n        honkaiImpactImage: (_c = {\n                display: 'inline-block',\n                height: '80px',\n                margin: '-34px 0'\n            },\n            _c[\"@media (max-width:\".concat(theme.breakpoints.values.md, \"px)\")] = {\n                height: '50px',\n                margin: '-21px 0',\n            },\n            _c),\n        discordImage: (_d = {\n                display: 'inline-block',\n                height: '42px',\n                margin: '-17px 0'\n            },\n            _d[\"@media (max-width:\".concat(theme.breakpoints.values.md, \"px)\")] = {\n                height: '26px',\n                margin: '-9px 0',\n            },\n            _d)\n    });\n});\nvar HeaderBlocks = function (props) {\n    var screenType = (0,screen/* default */.A)()[0].type;\n    var getPosition = function () {\n        var selected = props.selected, characters = props.characters;\n        var index = characters.map(function (character) { return character.key; }).indexOf(selected);\n        return (-index * 100) + '%';\n    };\n    var classes = useStyles({});\n    var characters = props.characters;\n    return (react.createElement(\"div\", { className: classes.headerContainer, style: {\n            width: characters ? \"\".concat(characters.length * 100, \"vw\") : undefined,\n            marginLeft: getPosition()\n        } }, characters.map(function (character) {\n        return react.createElement(\"div\", { key: character.key, className: classes.headerBlock },\n            react.createElement(\"img\", { src: character.image.src, className: character.image.className }),\n            react.createElement(\"div\", { className: classes.headerText },\n                react.createElement(Typography/* default */.A, { classes: { root: classes.headerTextFont }, variant: ['sm-tablet', 'xs-phone'].includes(screenType) ? 'h2' : 'h1', style: { color: character.color.primary } },\n                    react.createElement(\"span\", { style: { whiteSpace: 'pre' } }, character.name)),\n                react.createElement(Typography/* default */.A, { classes: { root: classes.headerTextFont }, variant: ['sm-tablet', 'xs-phone'].includes(screenType) ? 'subtitle1' : 'h5', style: { color: character.color.secondary } },\n                    \"from \",\n                    react.createElement(\"img\", { className: classes.honkaiImpactImage, src: honkai_impact_namespaceObject }),\n                    \"comes to \",\n                    react.createElement(\"img\", { className: classes.discordImage, src: discord_namespaceObject }))));\n    })));\n};\n/* harmony default export */ const header_blocks = (HeaderBlocks);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(961);\n// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/Transition.js + 2 modules\nvar Transition = __webpack_require__(7353);\n// EXTERNAL MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js + 1 modules\nvar TransitionGroup = __webpack_require__(2618);\n;// ./src/client/components/common/header-background.tsx\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n\n\nvar duration = 1500;\nvar BackgroundRipple = function (props) {\n    var animate = props.animate, appear = props.appear, key = props.key, size = props.size, color = props.color;\n    var defaultStyle = {\n        position: 'absolute',\n        width: size,\n        height: size,\n        top: \"calc(100% - \".concat(size, \" / 2)\"),\n        left: \"calc(50% - \".concat(size, \" / 2)\"),\n        background: \"linear-gradient(to top right, \".concat(color.from, \", \").concat(color.to, \")\")\n    };\n    var transitionStyles = {\n        entering: {\n            transform: 'scale(0, 0)',\n            borderRadius: '50%'\n        },\n        entered: {\n            transform: 'scale(1, 1)',\n            borderRadius: '50%',\n            transition: ['transform'].map(function (property) { return \"\".concat(property, \" \").concat(duration, \"ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\"); }).join(', ')\n        },\n        exiting: {\n            opacity: 1\n        },\n        exited: {\n            transform: 'scale(0, 0)',\n            opacity: 0,\n            transition: ['transform'].map(function (property) { return \"\".concat(property, \" 0ms \").concat(duration, \"ms\"); }).join(', ')\n        }\n    };\n    return (animate ?\n        react.createElement(Transition/* default */.Ay, { in: appear, timeout: 100, unmountOnExit: true }, function (state) { return (react.createElement(\"div\", { key: key, style: __assign(__assign({}, defaultStyle), transitionStyles[state]) })); }) :\n        react.createElement(\"div\", { key: key, style: defaultStyle }));\n};\nvar useBackgroundStyles = (0,makeStyles/* default */.A)(function (theme) { return ({\n    container: {\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        top: 0\n    }\n}); });\nvar container;\nvar HeaderBackground = function (props) {\n    var _a = props.color, from = _a.from, to = _a.to;\n    var _b = react.useState({\n        key: 0,\n        ripples: [{\n                key: 0,\n                appear: true,\n                size: '200%',\n                color: { from: from, to: to }\n            }]\n    }), state = _b[0], setState = _b[1];\n    react.useEffect(function () {\n        var _a = props.color, from = _a.from, to = _a.to;\n        changeColor(from, to);\n    }, [props.color]);\n    var changeColor = function (from, to) {\n        var ripples = state.ripples;\n        var hypotenuse = Math.sqrt(Math.pow(container.clientHeight, 2) + Math.pow(container.clientWidth, 2));\n        var size = hypotenuse * 2;\n        setState(function (state) { return ({\n            key: state.key + 1,\n            ripples: __spreadArray(__spreadArray([], ripples, true), [\n                {\n                    key: state.key + 1,\n                    appear: true,\n                    animate: true,\n                    size: size + 'px',\n                    color: { from: from, to: to }\n                }\n            ], false)\n        }); });\n        var pastRipples = ripples.map(function (ripple) { return ripple.key; });\n        setTimeout(function () {\n            return setState(function (state) { return ({\n                key: state.key,\n                ripples: state.ripples.filter(function (ripple) {\n                    return !pastRipples.includes(ripple.key);\n                })\n            }); });\n        }, duration);\n    };\n    var classes = useBackgroundStyles({});\n    var ripples = state.ripples;\n    return (react.createElement(TransitionGroup/* default */.A, { ref: function (ref) { return container = react_dom.findDOMNode(ref); }, className: classes.container }, ripples.map(function (ripple) {\n        return react.createElement(BackgroundRipple, __assign({}, ripple));\n    })));\n};\n/* harmony default export */ const header_background = (HeaderBackground);\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Button/Button.js\nvar Button = __webpack_require__(6746);\n;// ./src/client/components/common/avatar-buttons.tsx\n\n\n\nvar avatar_buttons_useStyles = (0,makeStyles/* default */.A)(function (theme) { return ({\n    avatarButtons: {\n        display: 'flex',\n        justifyContent: 'center',\n        transition: 'transform 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n    },\n    avatarButtonContainer: {\n        padding: '8px',\n        transition: 'padding 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n    },\n    avatarButtonContainerActive: {\n        padding: '8px 28px'\n    },\n    avatarButton: {\n        width: '56px',\n        minWidth: '56px',\n        height: '56px',\n        padding: '0',\n        borderRadius: '28px',\n        transition: 'transform 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, background 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n    },\n    avatarButtonActive: {\n        transform: 'scale(1.5)'\n    },\n    avatarButtonIcon: {\n        maxWidth: '90%',\n        maxHeight: '90%'\n    }\n}); });\nvar AvatarButtons = function (props) {\n    var getPosition = function () {\n        var selected = props.selected, buttons = props.buttons;\n        var index = buttons.map(function (button) { return button.key; }).indexOf(selected);\n        if (index >= 0) {\n            var position = (buttons.length - 1) / 2 - index;\n            return position * 72;\n        }\n        else {\n            return 0;\n        }\n    };\n    var classes = avatar_buttons_useStyles({});\n    var selected = props.selected, buttons = props.buttons;\n    return (react.createElement(\"div\", { className: classes.avatarButtons, style: { transform: \"translateX(\".concat(getPosition(), \"px)\") } }, buttons.map(function (button) {\n        return react.createElement(\"div\", { key: button.key, className: [classes.avatarButtonContainer, selected === button.key ? classes.avatarButtonContainerActive : ''].join(' ') },\n            react.createElement(Button/* default */.A, { onClick: button.onClick, classes: {\n                    root: [\n                        classes.avatarButton,\n                        selected === button.key ? classes.avatarButtonActive : '',\n                        selected === button.key ? button.color.primary : button.color.secondary\n                    ].join(' ')\n                } },\n                react.createElement(\"img\", { className: classes.avatarButtonIcon, src: button.image })));\n    })));\n};\n/* harmony default export */ const avatar_buttons = (AvatarButtons);\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Divider/Divider.js\nvar Divider = __webpack_require__(8672);\n;// ./src/client/constants/ai-chan.ts\n/* harmony default export */ const ai_chan = (function (prefix) { return [{\n        commands: ['donate'],\n        category: 'SUPPORT',\n        description: 'Display list of our donators',\n        examples: [],\n        mentionOnly: false,\n        notes: []\n    }, {\n        commands: ['vote'],\n        category: 'SUPPORT',\n        description: 'Support our bot on [DiscordBots.org](https://discordbots.org/bot/434737143395516416?) by vote',\n        examples: [],\n        mentionOnly: false,\n        notes: []\n    }, {\n        commands: ['help'],\n        category: 'UTILITY',\n        description: '',\n        examples: [],\n        mentionOnly: false,\n        notes: []\n    }, {\n        commands: ['ping'],\n        category: 'UTILITY',\n        description: 'Check your ping connection and my ping connection to discord server',\n        examples: [],\n        mentionOnly: false,\n        notes: []\n    }, {\n        commands: ['server'],\n        category: 'UTILITY',\n        description: 'Check server detail',\n        examples: [],\n        mentionOnly: false,\n        notes: []\n    }, {\n        commands: ['info'],\n        category: 'UTILITY',\n        description: 'Display some information about me',\n        examples: [],\n        mentionOnly: false,\n        notes: []\n    }, {\n        commands: ['avatar'],\n        category: 'UTILITY',\n        description: 'Display your avatar image or other members by mention them (works with multiple mention)',\n        examples: ['avatar @Raiden Mei', 'avatar @Raiden Mei @Kiana Kaslana @AI Chan'],\n        mentionOnly: false,\n        notes: ['If you not mention anyone bot will show your info instead']\n    }, {\n        commands: ['userinfo'],\n        category: 'UTILITY',\n        description: 'Show detail info about your account or other members by mention them (works with multiple mention)',\n        examples: ['avatar @Raiden Mei', 'avatar @Raiden Mei @Kiana Kaslana @AI Chan'],\n        mentionOnly: false,\n        notes: ['If you not mention anyone bot will show your info instead']\n    }, {\n        commands: ['def', 'define'],\n        category: 'UTILITY',\n        description: 'Show the definition of a word/term based on urban dictionary',\n        examples: ['define me', 'define you'],\n        mentionOnly: false,\n        notes: []\n    }, {\n        commands: ['poll'],\n        category: 'UTILITY',\n        description: 'Create a poll for everyone to vote upon',\n        examples: ['poll #test 1 vote 1 hour\\nSelect\\n- option 1\\n- option 2', 'poll addoption\\nSelect\\n- option 3'],\n        mentionOnly: false,\n        notes: [\n            \"The first line would contain the parameter for the poll\",\n            \"Only 3 parameters are available now\",\n            \"1. channel: tag a channel that you want the poll to appear on\",\n            \"2. vote: specify the amount of votes a single person can choose, also represents the amount of results winning the poll\",\n            \"3. time: specify the duration u want the poll to last for\",\n            \"Any vote option should start with - or * seperated by a space\",\n            \"Vote options amount should be around 2-10 only\",\n            \"Any line besides the first line that is not an option is considered part of the question\",\n            'Use addoption to add another option to an existing poll'\n        ]\n    }, {\n        commands: ['weapon'],\n        category: 'HONKAI IMPACT',\n        description: 'Show you detail about a game weapon from Honkai Impact 3rd',\n        examples: ['weapon <weapon name>', 'weapon <valkyrie name>', 'weapon <category>'],\n        mentionOnly: false,\n        notes: [\n            \"If you don't put any query bot will show you menu to browse our weapon gallery\",\n            \"Tips:\",\n            \"You can just write short name of the weapon like <\".concat(prefix, \"weapon Judah> will result <Oath of Judah>\"),\n            \"You can write initial name of weapon for easy calling like <\".concat(prefix, \"weapon 2sr> will result <2nd Sacred Relic>\"),\n            \"This command has shortform `!w` for easier access\"\n        ]\n    }, {\n        commands: ['stigma', 'stigmata'],\n        category: 'HONKAI IMPACT',\n        description: 'Show you detail about a stigmata\\'s effect from Hokai Impact 3rd',\n        examples: ['stigmata <stigmata name>', 'stigmata <stigmata name> <T/M/B>'],\n        mentionOnly: false,\n        notes: [\n            \"If you don't put any query bot will show you menu to browse our stigmata gallery\",\n            \"Tips:\",\n            \"You don't need to write full name of stigma, for example <\".concat(prefix, \"stigmata tesla> will show you result of all stigma with your query\"),\n            \"You can tap emoji to jump to a detailed version of a stigmata variation or stigmata set\",\n            \"This command has shortform `!s` for easier access\"\n        ]\n    }, {\n        commands: ['valk', 'valkyrie'],\n        category: 'HONKAI IMPACT',\n        description: 'Show you detail about a valkyrie\\'s detail informations',\n        examples: ['valkyrie <valkyrie name>', 'valkyrie <battlesuit name>'],\n        mentionOnly: false,\n        notes: [\n            \"If you don't put any query bot will show you menu to browse our valkyrie gallery\",\n            \"Tips:\",\n            \"You can just type valkyrie initial of battlesuit for easier access, for example: <\".concat(prefix, \"valkyrie SD> will result <Shadow Dash>\"),\n            \"You can tap emoji to jump to recommendation setup of valkyrie\",\n            \"This command has shortform `!v` for easier access\"\n        ]\n    }, {\n        commands: ['form', 'formation'],\n        category: 'HONKAI IMPACT',\n        description: 'Show you detail about a valkyrie\\'s formation and strategy',\n        examples: ['formation <valkyrie name>', 'form <battlesuit name>'],\n        mentionOnly: false,\n        notes: [\n            \"If you don't put any query bot will show you menu to browse our valkyrie gallery\",\n            \"Tips:\",\n            \"You can just type valkyrie initial of battlesuit for easier access, for example: <\".concat(prefix, \"formation SD> will result <Shadow Dash>\"),\n            \"You can tap emoji to jump to recommendation setup of valkyrie\",\n            \"This command has shortform `!f` for easier access\"\n        ]\n    }, {\n        commands: ['recom', 'recommendation'],\n        category: 'HONKAI IMPACT',\n        description: 'Show you recommendation about equipment setup for a specified valkyrie',\n        examples: ['recommendation <valkyrie name>', 'recommendation <battlesuit name>'],\n        mentionOnly: false,\n        notes: [\n            \"If you don't put any query bot will show you menu to browse our valkyrie data\",\n            \"Tips:\",\n            \"You can just type valkyrie initial of battlesuit for easier access, for example: <\".concat(prefix, \"recommendation SD> will result <Shadow Dash>\"),\n            \"You can tap emoji to jump to detail info about valkyrie\",\n            \"This command has shortform `!r` for easier access\"\n        ]\n    }, {\n        commands: ['elf'],\n        category: 'HONKAI IMPACT',\n        description: 'Show you detail about an ELF\\'s detail informations',\n        examples: ['elf <elf name>'],\n        mentionOnly: false,\n        notes: [\n            \"If you don't put any query bot will show you menu to browse our ELF gallery\",\n            \"Tips:\",\n            \"You can just write short name of the ELF like <\".concat(prefix, \"elf Blood> will result <Blood Embrace>\"),\n            \"You can write initial name of ELF for easy calling like <\".concat(prefix, \"elf jw> will result <Jingwei's Wings>\"),\n            \"This command has shortform `!e` for easier access\"\n        ]\n    }, {\n        commands: ['faction'],\n        category: 'HONKAI IMPACT',\n        description: 'Select your faction on faction war event',\n        examples: ['faction', 'faction list'],\n        mentionOnly: false,\n        notes: [\n            'For first setup, user with permission to manage role needs to run this command to prepare Ai Chan',\n            \"Use \".concat(prefix, \"faction list to show the sides each and every member has chosen\"),\n            'You can\\'t change faction after choosing, if you make a mistake you must contact your server administrator/moderators to remove your faction role',\n            \"Admin or someone with manage-roles permission need to do <\".concat(prefix, \"faction reset> to enable all other members to choose their faction again\")\n        ]\n    }, {\n        commands: ['gacha'],\n        category: 'FUN',\n        description: 'Do gacha simulation like on Honkai Impact 3rd',\n        examples: ['gacha', 'gacha <focused/standard>', 'gacha <number of pull>'],\n        mentionOnly: false,\n        notes: [\n            \"Not giving any query will result in pulling standard supply gacha\",\n            \"There is a 1 minute cooldown after executing this command\",\n            \"Default number of pulls are 10 but you can change it by typing the number after the query\",\n            \"For example: <\".concat(prefix, \"gacha focused 8>, or <\").concat(prefix, \"gacha 5>\")\n        ]\n    }, {\n        commands: ['prefix'],\n        category: 'ADMIN TOOL',\n        description: \"Change prefix for server\",\n        examples: ['prefix <new prefix>'],\n        mentionOnly: false,\n        notes: [\n            \"This server's prefix is \".concat(prefix),\n            'Only ADMINISTARTOR can change the prefix',\n            'space character won\\'t work'\n        ]\n    }, {\n        commands: ['awoo', 'howl'],\n        category: 'IMAGE',\n        description: 'Display gif about awoo',\n        examples: ['awoo @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['blush'],\n        category: 'IMAGE',\n        description: 'Display gif to express blush',\n        examples: ['blush @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['confused'],\n        category: 'IMAGE',\n        description: 'Display gif to express confused',\n        examples: ['confused @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['cuddle'],\n        category: 'IMAGE',\n        description: 'Display gif to express cuddle',\n        examples: ['cuddle @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['dance'],\n        category: 'IMAGE',\n        description: 'Display gif to express dance',\n        examples: ['dance @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['hug'],\n        category: 'IMAGE',\n        description: 'Display gif to express hug',\n        examples: ['hug @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['idk', 'shrug'],\n        category: 'IMAGE',\n        description: 'Display gif to express shrug',\n        examples: ['idk @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['insult'],\n        category: 'IMAGE',\n        description: 'Display gif to express insult',\n        examples: ['insult @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['kiss'],\n        category: 'IMAGE',\n        description: 'Display gif about kissing',\n        examples: ['kiss @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['lewd'],\n        category: 'IMAGE',\n        description: 'Display gif about lewd',\n        examples: ['lewd @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['lick'],\n        category: 'IMAGE',\n        description: 'Display gif about lick',\n        examples: ['lick @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['nyan', 'neko'],\n        category: 'IMAGE',\n        description: 'Display gif about neko girl nyan~',\n        examples: ['nyan @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['pat'],\n        category: 'IMAGE',\n        description: 'Display gif about pat',\n        examples: ['pat @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['poke'],\n        category: 'IMAGE',\n        description: 'Display gif to express poke',\n        examples: ['poke @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['pout'],\n        category: 'IMAGE',\n        description: 'Display gif about pout',\n        examples: ['pout @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['punch'],\n        category: 'IMAGE',\n        description: 'Display gif to express punch',\n        examples: ['punch @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['slap'],\n        category: 'IMAGE',\n        description: 'Display gif about slap',\n        examples: ['slap @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['sleepy'],\n        category: 'IMAGE',\n        description: 'Display gif to express sleepy',\n        examples: ['sleepy @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['stare'],\n        category: 'IMAGE',\n        description: 'Display gif about stare',\n        examples: ['stare @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['smile'],\n        category: 'IMAGE',\n        description: 'Display gif to express smile',\n        examples: ['smile @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['teehee'],\n        category: 'IMAGE',\n        description: 'Display gif to express tehee',\n        examples: ['teehee @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['triggered'],\n        category: 'IMAGE',\n        description: 'Display gif to express triggered',\n        examples: ['triggered @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['wasted'],\n        category: 'IMAGE',\n        description: 'Display gif to express wasted',\n        examples: ['wasted @someone'],\n        mentionOnly: false,\n        notes: [\n            'Works with multiple mention'\n        ]\n    }, {\n        commands: ['ban'],\n        category: 'ADMIN TOOL',\n        description: 'Ban user from server by mention it',\n        examples: ['ban @someone reason'],\n        mentionOnly: false,\n        notes: [\n            'Only user with BAN_MEMBERS permission can use this command'\n        ]\n    }, {\n        commands: ['kick'],\n        category: 'ADMIN TOOL',\n        description: 'Kick user from server by mention it',\n        examples: ['kick @someone reason'],\n        mentionOnly: false,\n        notes: [\n            'Only user with KICK_MEMBERS permission can use this command'\n        ]\n    }, {\n        commands: ['send'],\n        category: 'ADMIN TOOL',\n        description: 'Send message to another channel as AI Chan',\n        examples: ['send #general message', 'send message', 'send @someone message'],\n        mentionOnly: false,\n        notes: [\n            \"Tagging a channel will result in the bot messaging the tagged channel\",\n            \"Mentioning someone will result int the bot messaging that mentioned user privately\",\n            \"This command doesn't work on multiple tag or mention so please only tag one channel or mention one user in a single message\"\n        ]\n    }, {\n        commands: ['clear'],\n        category: 'ADMIN TOOL',\n        description: 'Mass delete the message on channel',\n        examples: ['clear 100', 'clear @someone'],\n        mentionOnly: false,\n        notes: [\n            \"You can only delete message by certain user by mentioning him/her\",\n            \"<\".concat(prefix, \"clear @someone> will mass delete his message in one channel\"),\n            \"Only can delete message that are not older than 7 days\"\n        ]\n    }]; });\n\n;// ./src/client/components/landing/common/demo-section.tsx\n\n\n\n\n\n\nvar demo_section_useStyles = (0,makeStyles/* default */.A)(function (theme) { return ({\n    text: {\n        color: 'white'\n    },\n    demoRow: {\n        display: 'flex',\n        padding: '32px 0'\n    },\n    demoRowEven: {\n        flexDirection: 'row-reverse'\n    },\n    demoColumn: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    demoCard: {\n        background: grey/* default */.A[800]\n    },\n    description: {\n        padding: '32px'\n    },\n    demoImage: {\n        width: '75%',\n        maxWidth: '400px'\n    }\n}); });\nvar DemoSection = function (props) {\n    var classes = demo_section_useStyles({});\n    var demos = props.demos, color = props.color;\n    return (react.createElement(\"div\", null, demos.map(function (demo, index) { return [\n        index !== 0 && react.createElement(Divider/* default */.A, { key: 'divider' }),\n        react.createElement(Grid/* default */.A, { key: 'demo-row', container: true, classes: { container: classes.demoRow + (index % 2 === 1 ? ' ' + classes.demoRowEven : '') } },\n            react.createElement(Grid/* default */.A, { item: true, xs: 12, md: 6, classes: { item: classes.demoColumn } },\n                react.createElement(\"div\", { className: classes.description },\n                    react.createElement(Typography/* default */.A, { variant: 'h5', style: { color: color } }, demo.headline),\n                    demo.command &&\n                        react.createElement(Typography/* default */.A, { variant: 'caption', color: 'textSecondary', gutterBottom: true }, demo.command),\n                    react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, demo.description.map(function (description, index) { return [index !== 0 && react.createElement(\"br\", { key: 'new-line-' + index }), description]; })))),\n            react.createElement(Grid/* default */.A, { item: true, xs: 12, md: 6, classes: { item: classes.demoColumn } },\n                react.createElement(\"img\", { src: demo.image, className: classes.demoImage })))\n    ]; })));\n};\n/* harmony default export */ const demo_section = (DemoSection);\n\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js + 5 modules\nvar ExpansionPanel = __webpack_require__(6088);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js\nvar ExpansionPanelSummary = __webpack_require__(4944);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js\nvar ExpansionPanelDetails = __webpack_require__(1024);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Card/Card.js\nvar Card = __webpack_require__(426);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/CardContent/CardContent.js\nvar CardContent = __webpack_require__(6272);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/Input/Input.js + 5 modules\nvar Input = __webpack_require__(9365);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js\nvar InputAdornment = __webpack_require__(4054);\n// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/IconButton/IconButton.js\nvar IconButton = __webpack_require__(2460);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/esm/Search.js\nvar Search = __webpack_require__(2516);\n// EXTERNAL MODULE: ./node_modules/@material-ui/icons/esm/ExpandMore.js\nvar ExpandMore = __webpack_require__(7549);\n;// ./src/client/utility/string.ts\nvar conjuctJoin = function (words) {\n    return [words.slice(0, words.length - 1).join(', '), words.slice(words.length - 1)].filter(function (sentence) { return sentence !== ''; }).join(' and ');\n};\n\n;// ./src/client/components/landing/common/command-section.tsx\nvar command_section_assign = (undefined && undefined.__assign) || function () {\n    command_section_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return command_section_assign.apply(this, arguments);\n};\nvar command_section_spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar command_section_useStyles = (0,makeStyles/* default */.A)(function (theme) {\n    var _a, _b;\n    return ({\n        searchCardSection: {\n            margin: '16px 0 24px'\n        },\n        searchCard: {\n            transition: 'box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n        },\n        searchCardContent: {\n            '&:first-child': {\n                paddingRight: '8px',\n                paddingTop: '8px',\n                paddingBottom: '8px'\n            }\n        },\n        commandSection: {\n            width: '100%',\n            padding: '32px 0'\n        },\n        commandCategory: {\n            margin: '16px 0'\n        },\n        commandPanel: {\n            background: theme.palette.background.paper\n        },\n        commandTitleContainer: (_a = {\n                width: '100%',\n                display: 'flex',\n                flexDirection: 'row',\n                alignItems: 'center'\n            },\n            _a[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                flexDirection: 'column',\n                alignItems: 'flex-start'\n            },\n            _a),\n        commandTitle: (_b = {\n                flexBasis: '50%'\n            },\n            _b[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                flexBasis: 'auto'\n            },\n            _b),\n        commandSubheading: {\n            marginTop: '12px'\n        },\n        commandExamplePre: {\n            fontFamily: 'Roboto Mono',\n            whiteSpace: 'pre-wrap',\n            wordWrap: 'break-word'\n        },\n        commandDetail: {\n            flexDirection: 'column'\n        },\n        commandDetailParagraph: {\n            wordBreak: 'break-word'\n        },\n        commandExpandPlaceholder: {\n            height: '24px',\n            width: '24px'\n        }\n    });\n});\nvar input;\nvar CommandSection = function (props) {\n    var _a = react.useState({\n        query: undefined,\n        seaching: false,\n        active: undefined\n    }), state = _a[0], setState = _a[1];\n    react.useLayoutEffect(function () {\n        var updateHeight = props.updateHeight;\n        if (updateHeight) {\n            setTimeout(updateHeight, 300);\n        }\n    }, [state.query, state.active]);\n    var expand = function (key) {\n        if (state.active === key) {\n            setState(command_section_assign(command_section_assign({}, state), { active: undefined }));\n        }\n        else {\n            setState(command_section_assign(command_section_assign({}, state), { active: key }));\n        }\n    };\n    var searchQuery = function (event) {\n        var value = event.target.value;\n        setState(command_section_assign(command_section_assign({}, state), { query: value === '' ? undefined : value.toLowerCase() }));\n    };\n    var focusInput = function () {\n        input === null || input === void 0 ? void 0 : input.focus();\n    };\n    var onFocusInput = function (focus) {\n        setState(command_section_assign(command_section_assign({}, state), { seaching: focus }));\n    };\n    var prefix = function (command, mentionOnly) {\n        var name = props.name;\n        if (mentionOnly) {\n            return \"@\".concat(name, \" \").concat(command);\n        }\n        else {\n            return \"\".concat(\"!\").concat(command);\n        }\n    };\n    var classes = command_section_useStyles({});\n    var helps = props.helps, color = props.color;\n    var query = state.query, seaching = state.seaching, active = state.active;\n    var highlightQuery = function (paragraph) {\n        var regexp = query && new RegExp(query.split('').map(function (char) {\n            return /\\W/.test(char) ? \"\\\\\".concat(char) : char;\n        }).join(''), 'gi');\n        var found = paragraph.match(regexp);\n        return paragraph.split(regexp).reduce(function (content, notQuery, index) {\n            return index === 0 ? [\n                notQuery\n            ] : command_section_spreadArray(command_section_spreadArray([], content, true), [\n                react.createElement(\"span\", { key: index, style: { color: color } }, found[index - 1]),\n                notQuery\n            ], false);\n        }, []);\n    };\n    return (react.createElement(\"div\", { className: classes.commandSection },\n        react.createElement(\"div\", { className: classes.searchCardSection },\n            react.createElement(Card/* default */.A, { className: classes.searchCard, elevation: seaching ? 8 : 2 },\n                react.createElement(CardContent/* default */.A, { className: classes.searchCardContent },\n                    react.createElement(Input/* default */.A, { inputRef: function (ref) { return input = ref; }, fullWidth: true, disableUnderline: true, onChange: searchQuery, value: query || '', onFocus: function () { return onFocusInput(true); }, onBlur: function () { return onFocusInput(false); }, endAdornment: react.createElement(InputAdornment/* default */.A, { position: 'end' },\n                            react.createElement(IconButton/* default */.A, { onClick: focusInput },\n                                react.createElement(Search/* default */.A, null))) })))),\n        helps.reduce(function (category, help) {\n            return !query || help.commands.some(function (command) { return command.includes(query); }) || help.category.includes(query.toUpperCase()) ? command_section_spreadArray(command_section_spreadArray([], category.map(function (each) {\n                return each.category === help.category ?\n                    { category: each.category, helps: command_section_spreadArray(command_section_spreadArray([], each.helps, true), [help], false) } :\n                    each;\n            }), true), !category.map(function (each) { return each.category; }).includes(help.category) ?\n                [{ category: help.category, helps: [help] }] :\n                [], true) : category;\n        }, []).map(function (each) {\n            return react.createElement(\"div\", { key: each.category, className: classes.commandCategory }, each.helps.map(function (help) {\n                return react.createElement(ExpansionPanel/* default */.A, { disabled: help.description === '', key: help.commands[0], expanded: help.commands[0] === active, onChange: function () { return expand(help.commands[0]); }, classes: { root: classes.commandPanel } },\n                    react.createElement(ExpansionPanelSummary/* default */.A, { expandIcon: help.description !== ''\n                            ? react.createElement(ExpandMore/* default */.A, null)\n                            : react.createElement(\"div\", { className: classes.commandExpandPlaceholder }) },\n                        react.createElement(\"div\", { className: classes.commandTitleContainer },\n                            react.createElement(\"div\", { className: classes.commandTitle },\n                                react.createElement(Typography/* default */.A, { variant: 'subtitle1' }, highlightQuery(conjuctJoin(help.commands.map(function (command) { return prefix(command, help.mentionOnly); }))))),\n                            react.createElement(\"div\", { className: classes.commandTitle },\n                                react.createElement(Typography/* default */.A, { variant: 'caption' }, highlightQuery(help.category))))),\n                    react.createElement(ExpansionPanelDetails/* default */.A, { className: classes.commandDetail },\n                        react.createElement(Typography/* default */.A, { variant: 'caption' }, \"Description\"),\n                        react.createElement(Typography/* default */.A, { className: classes.commandDetailParagraph, component: 'p' }, help.description),\n                        help.examples.length > 0 && react.createElement(Typography/* default */.A, { className: classes.commandSubheading, variant: 'caption' }, \"Examples\"),\n                        help.examples.map(function (example, index) {\n                            return react.createElement(Typography/* default */.A, { key: index, className: classes.commandExamplePre, component: 'pre', gutterBottom: true }, prefix(example, help.mentionOnly));\n                        }),\n                        help.notes.length > 0 && react.createElement(Typography/* default */.A, { className: classes.commandSubheading, variant: 'caption' }, \"Notes\"),\n                        help.notes.map(function (note, index) {\n                            return react.createElement(Typography/* default */.A, { key: index, variant: 'body1', gutterBottom: true }, note);\n                        })));\n            }));\n        })));\n};\n/* harmony default export */ const command_section = (CommandSection);\n\n;// ./src/asset/img/stigmata-demo.png\nconst stigmata_demo_namespaceObject = __webpack_require__.p + \"a49d3023e4239025e998.png\";\n;// ./src/asset/img/valkyrie-demo.png\nconst valkyrie_demo_namespaceObject = __webpack_require__.p + \"309a6a6ed7860e386f53.png\";\n;// ./src/asset/img/recommendation-demo.png\nconst recommendation_demo_namespaceObject = __webpack_require__.p + \"f27c8054da1eddc6686b.png\";\n;// ./src/asset/img/elf-demo.png\nconst elf_demo_namespaceObject = __webpack_require__.p + \"cd7c832af2d52b330f39.png\";\n;// ./src/asset/img/gacha-demo.png\nconst gacha_demo_namespaceObject = __webpack_require__.p + \"ecddd677ec66d24b4f0b.png\";\n;// ./src/client/components/landing/ai-chan.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ai_chan_useStyles = (0,makeStyles/* default */.A)(function (theme) {\n    var _a;\n    return ({\n        '@import': [\n            'url(https://fonts.googleapis.com/css?family=Righteous)',\n            'url(https://fonts.googleapis.com/css?family=Roboto+Mono)'\n        ],\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        pageContainer: (_a = {\n                width: '1200px',\n                maxWidth: '100%',\n                padding: '0 32px'\n            },\n            _a[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                padding: '0 16px',\n            },\n            _a),\n        text: {\n            color: 'white'\n        },\n        descriptionRow: {\n            textAlign: 'center',\n            padding: '16px 0'\n        },\n        inviteButtons: {\n            textAlign: 'center',\n            padding: '32px 0'\n        },\n        inviteButton: {\n            margin: '8px',\n            color: theme.palette.primary.contrastText,\n            backgroundColor: green/* default */.A[800],\n            '&:hover': {\n                backgroundColor: green/* default */.A[900]\n            }\n        },\n        link: {\n            color: green/* default */.A[400],\n            textDecoration: 'none'\n        },\n        dividerRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        divider: {\n            flexGrow: 1,\n            margin: '16px'\n        }\n    });\n});\nvar AiChanPage = function (props) {\n    var classes = ai_chan_useStyles({});\n    var updateHeight = props.updateHeight;\n    return (react.createElement(\"div\", { className: classes.container },\n        react.createElement(Grid/* default */.A, { container: true, direction: 'column', alignItems: 'center', classes: { container: classes.pageContainer } },\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.descriptionRow } },\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, \"Ai Chan is our general purpose bot designed to provide information of in game equipments to discord.\"),\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } },\n                    \"If you are a Genshin Impact traveler, check out our\",\n                    ' ',\n                    react.createElement(\"a\", { className: classes.link, href: 'https://paimon-chatbot.github.io' }, \"Paimon\"),\n                    \" too.\")),\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.inviteButtons } },\n                react.createElement(Button/* default */.A, { classes: { root: classes.inviteButton }, variant: 'contained', size: 'large', href: 'https://discordapp.com/oauth2/authorize?client_id=434737143395516416&permissions=8&scope=bot' }, \"INVITE ME\"),\n                react.createElement(Button/* default */.A, { classes: { root: classes.inviteButton }, variant: 'contained', size: 'large', href: 'https://www.patreon.com/user?u=10662508' }, \"SUPPORT US\")),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"FEATURES\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(demo_section, { demos: [{\n                        headline: 'Show & Describe Game Equipment',\n                        command: 'command: !weapon, !stigmata',\n                        description: [\n                            'You don\\'t need to take screenshot and upload it to show info about game equipment.',\n                            'AI Chan will display it for you.'\n                        ],\n                        image: stigmata_demo_namespaceObject\n                    }, {\n                        headline: 'Show & Describe Valkyrie',\n                        command: 'command: !valkyrie',\n                        description: [\n                            'Here is the secret about the gals!',\n                            'But however hard you try you will not be able to see their panties!'\n                        ],\n                        image: valkyrie_demo_namespaceObject\n                    }, {\n                        headline: 'Recommend Equipments',\n                        command: 'command: !recommend',\n                        description: [\n                            'You can see better set equipment for the valkyrie too...'\n                        ],\n                        image: recommendation_demo_namespaceObject\n                    }, {\n                        headline: 'Show & Describe ELF',\n                        command: 'command: !elf',\n                        description: [\n                            'ELF Equipment Living Form is here too...'\n                        ],\n                        image: elf_demo_namespaceObject\n                    }, {\n                        headline: 'Gacha Simulation',\n                        command: 'command: !gacha',\n                        description: [\n                            'Yeah, AI Chan know you are really like gacha system in Honkai Impact 3rd so I bring a simulation to your server to enhance your luck. (maybe)'\n                        ],\n                        image: gacha_demo_namespaceObject\n                    }], color: green/* default */.A[400] }),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"COMMANDS\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(command_section, { name: 'Ai Chan', helps: ai_chan(\"!\"), color: green/* default */.A[300], updateHeight: updateHeight }))));\n};\n/* harmony default export */ const landing_ai_chan = (AiChanPage);\n\n;// ./src/client/constants/kiana.ts\n/* harmony default export */ const kiana = (function (prefix) { return [{\n        commands: ['member'],\n        category: 'ADMIN TOOL',\n        description: 'Adding role member to any users',\n        examples: ['member add @someone', 'member kick @someone'],\n        mentionOnly: false,\n        notes: [\n            \"You can add member role to any user for easy armada member management\",\n            \"Kiana uses the role 'member' to identify armada members, use <\".concat(prefix, \"member setrole <role name>> to customise the role name\"),\n            \"Kiana will announce added member in a channel with name that starts with 'common' for everyone to welcome and celebrate the newly joined member, \" +\n                \"use <\".concat(prefix, \"member setwelcome #channel> to customise the channel\"),\n            \"Bronya will add an entry as event record similar to how she records any user that joins or leave the server\",\n        ]\n    }, {\n        commands: ['roam'],\n        category: 'ADMIN TOOL',\n        description: 'Allow Kiana to post message to this channel without a command',\n        examples: ['roam', 'roam #dorm'],\n        mentionOnly: true,\n        notes: [\n            \"Kiana will use a channel with name that starts with 'announcement' to inform user of updates from Honkai Impact\",\n            \"This channel can be changed according to captain's arrangement with this command\"\n        ]\n    }, {\n        commands: ['send'],\n        category: 'ADMIN TOOL',\n        description: 'Send message to another channel as Kiana',\n        examples: ['send #general <message>', 'send <message>', 'send @someone <message>'],\n        mentionOnly: true,\n        notes: [\n            \"Tagging a channel will result in the bot messaging the tagged channel\",\n            \"Mentioning someone will result int the bot messaging that mentioned user privately\",\n            \"This command doesn't work on multiple tag or mention so please only tag one channel or mention one user in a single message\"\n        ]\n    }]; });\n\n;// ./src/asset/img/honkai-update-demo.png\nconst honkai_update_demo_namespaceObject = __webpack_require__.p + \"4de5db9bb7e3de87afc0.png\";\n;// ./src/client/components/landing/kiana.tsx\n\n\n\n\n\n\n\n\n\n\n\nvar kiana_useStyles = (0,makeStyles/* default */.A)(function (theme) {\n    var _a;\n    return ({\n        '@import': [\n            'url(https://fonts.googleapis.com/css?family=Righteous)',\n            'url(https://fonts.googleapis.com/css?family=Roboto+Mono)'\n        ],\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        pageContainer: (_a = {\n                width: '1200px',\n                maxWidth: '100%',\n                padding: '0 32px'\n            },\n            _a[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                padding: '0 16px',\n            },\n            _a),\n        text: {\n            color: 'white'\n        },\n        descriptionRow: {\n            flexDirection: 'column',\n            textAlign: 'center',\n            padding: '16px 0'\n        },\n        inviteButtons: {\n            textAlign: 'center',\n            padding: '32px 0'\n        },\n        inviteButton: {\n            margin: '8px',\n            color: theme.palette.primary.contrastText,\n            backgroundColor: yellow/* default */.A[800],\n            '&:hover': {\n                backgroundColor: yellow/* default */.A[900]\n            }\n        },\n        dividerRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        divider: {\n            flexGrow: 1,\n            margin: '16px'\n        }\n    });\n});\nvar KianaPage = function (props) {\n    var classes = kiana_useStyles({});\n    var updateHeight = props.updateHeight;\n    return (react.createElement(\"div\", { className: classes.container },\n        react.createElement(Grid/* default */.A, { container: true, direction: 'column', alignItems: 'center', classes: { container: classes.pageContainer } },\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.descriptionRow } },\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, \"Kiana is a valkyrie chatbot that are reserved for our patreon supporter.\"),\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, \"If you want to chat with Kiana, just tag her.\")),\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.inviteButtons } },\n                react.createElement(Button/* default */.A, { classes: { root: classes.inviteButton }, variant: 'contained', size: 'large', href: 'https://www.patreon.com/user?u=10662508' }, \"SUPPORT US\")),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"FEATURES\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(demo_section, { demos: [{\n                        headline: 'Updates You of Game Changes',\n                        description: [\n                            \"Kiana gathers information from the official Honkai Impact social media and update you.\"\n                        ],\n                        image: honkai_update_demo_namespaceObject\n                    }], color: yellow/* default */.A[400] }),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"COMMANDS\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(command_section, { name: 'Kiana', helps: kiana(\"!\"), color: yellow/* default */.A[300], updateHeight: updateHeight }))));\n};\n/* harmony default export */ const landing_kiana = (KianaPage);\n\n;// ./src/client/constants/mei.ts\n/* harmony default export */ const mei = (function (prefix) { return [{\n        commands: ['alert'],\n        category: 'HONKAI IMPACT',\n        description: 'Adding region role to member',\n        examples: ['alert', 'alert makerole'],\n        mentionOnly: false,\n        notes: [\n            'For first setup, user with permission to manage role needs to run this command to prepare Mei',\n            \"Choosing ur region role will allow Mei to tag you for certain events in Honkai Impact and Kiana to tag you for any update from Honkai Impact developers\",\n            \"Some of the events Mei would inform you are battle simulation, abyss ending, open world reset and Mei's meal\",\n            \"Mei will also make sure Kiana would keep an eye on Honkai Impact social media to see if there's any updates (the only way to keep Kiana working)\"\n        ]\n    }, {\n        commands: ['roam'],\n        category: 'ADMIN TOOL',\n        description: 'Allow Mei to post message to this channel without a command',\n        examples: ['roam', 'roam #dorm'],\n        mentionOnly: true,\n        notes: [\n            \"Mei will use a channel with name that starts with 'valkyrie' to inform user of certain events in Honkai Impact\",\n            \"This channel can be changed according to captain's arrangement with this command\"\n        ]\n    }, {\n        commands: ['send'],\n        category: 'ADMIN TOOL',\n        description: 'Send message to another channel as Mei',\n        examples: ['send #general <message>', 'send <message>', 'send @someone <message>'],\n        mentionOnly: true,\n        notes: [\n            \"Tagging a channel will result in the bot messaging the tagged channel\",\n            \"Mentioning someone will result int the bot messaging that mentioned user privately\",\n            \"This command doesn't work on multiple tag or mention so please only tag one channel or mention one user in a single message\"\n        ]\n    }]; });\n\n;// ./src/asset/img/honkai-event-demo.png\nconst honkai_event_demo_namespaceObject = __webpack_require__.p + \"947a73dfe5164a48a3ed.png\";\n;// ./src/asset/img/server-update-demo.png\nconst server_update_demo_namespaceObject = __webpack_require__.p + \"1612b097368625cb286c.png\";\n;// ./src/client/components/landing/mei.tsx\n\n\n\n\n\n\n\n\n\n\n\n\nvar mei_useStyles = (0,makeStyles/* default */.A)(function (theme) {\n    var _a;\n    return ({\n        '@import': [\n            'url(https://fonts.googleapis.com/css?family=Righteous)',\n            'url(https://fonts.googleapis.com/css?family=Roboto+Mono)'\n        ],\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        pageContainer: (_a = {\n                width: '1200px',\n                maxWidth: '100%',\n                padding: '0 32px'\n            },\n            _a[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                padding: '0 16px',\n            },\n            _a),\n        text: {\n            color: 'white'\n        },\n        descriptionRow: {\n            flexDirection: 'column',\n            textAlign: 'center',\n            padding: '16px 0'\n        },\n        descriptionText: {\n            color: 'white'\n        },\n        inviteButtons: {\n            textAlign: 'center',\n            padding: '32px 0'\n        },\n        inviteButton: {\n            margin: '8px',\n            color: theme.palette.primary.contrastText,\n            backgroundColor: purple/* default */.A[800],\n            '&:hover': {\n                backgroundColor: purple/* default */.A[900]\n            }\n        },\n        dividerRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        divider: {\n            flexGrow: 1,\n            margin: '16px'\n        }\n    });\n});\nvar MeiPage = function (props) {\n    var classes = mei_useStyles({});\n    var updateHeight = props.updateHeight;\n    return (react.createElement(\"div\", { className: classes.container },\n        react.createElement(Grid/* default */.A, { container: true, direction: 'column', alignItems: 'center', classes: { container: classes.pageContainer } },\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.descriptionRow } },\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, \"Mei is a valkyrie chatbot that are reserved for our patreon supporter.\"),\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, \"If you want to chat with Mei, just tag her.\")),\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.inviteButtons } },\n                react.createElement(Button/* default */.A, { classes: { root: classes.inviteButton }, variant: 'contained', size: 'large', href: 'https://www.patreon.com/user?u=10662508' }, \"SUPPORT US\")),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"FEATURES\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(demo_section, { demos: [{\n                        headline: 'Remind You of In Game Events',\n                        description: [\n                            \"You want to be reminded of Mei's lunch and dinner, battle simulation, open world reset, and abyss ending?\",\n                            'Mei will remind you.'\n                        ],\n                        image: honkai_event_demo_namespaceObject\n                    }, {\n                        headline: 'Display New Joiner or Leaver, Member Change Nickname',\n                        description: [\n                            'You want to know some of the activities happening in ur discord server?',\n                            'Bronya will display it for you.',\n                            'Kiana will welcome your newly recruit members and notifying everyone to give a warm embrace...',\n                            \"Mei's assignment for Bronya and Kiana\"\n                        ],\n                        image: server_update_demo_namespaceObject\n                    }], color: purple/* default */.A[400] }),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"COMMANDS\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(command_section, { name: 'Mei', helps: mei(\"!\"), color: purple/* default */.A[300], updateHeight: updateHeight }))));\n};\n/* harmony default export */ const landing_mei = (MeiPage);\n\n;// ./src/client/constants/bronya.ts\n/* harmony default export */ const bronya = (function (prefix) { return [{\n        commands: ['music'],\n        category: 'UTILITY',\n        description: 'Plays music with Project Bunny 19C',\n        examples: ['music play <song name>', 'music stop', 'music show'],\n        mentionOnly: false,\n        notes: [\n            \"Bronya plays music for you using her one and only Project Bunny 19C\",\n            \"You will need to join a voice channel for Bronya to play you music\",\n            \"Use <music show> to show the music list Bronya is currently playing and \" +\n                \"<music stop> to stop Project Bunny 19C and politely ask Bronya to leave the voice channel\",\n            \"This command has shortform `!m` for easier access\"\n        ]\n    }, {\n        commands: ['roam'],\n        category: 'ADMIN TOOL',\n        description: 'Allow Bronya to post message to this channel without a command',\n        examples: ['roam', 'roam #dorm'],\n        mentionOnly: true,\n        notes: [\n            \"Bronya will use a channel with name that starts with 'valkyrie' to inform everyone of users joining and leaving the server, \" +\n                \"or members joining and kicked out from the armada\",\n            \"This channel can be changed according to captain's arrangement with this command\"\n        ]\n    }, {\n        commands: ['send'],\n        category: 'ADMIN TOOL',\n        description: 'Send message to another channel as Bronya',\n        examples: ['send #general <message>', 'send <message>', 'send @someone <message>'],\n        mentionOnly: true,\n        notes: [\n            \"Tagging a channel will result in the bot messaging the tagged channel\",\n            \"Mentioning someone will result int the bot messaging that mentioned user privately\",\n            \"This command doesn't work on multiple tag or mention so please only tag one channel or mention one user in a single message\"\n        ]\n    }]; });\n\n;// ./src/asset/img/music-demo.png\nconst music_demo_namespaceObject = __webpack_require__.p + \"43db63fdf20619bf9908.png\";\n;// ./src/client/components/landing/bronya.tsx\n\n\n\n\n\n\n\n\n\n\n\nvar bronya_useStyles = (0,makeStyles/* default */.A)(function (theme) {\n    var _a;\n    return ({\n        '@import': [\n            'url(https://fonts.googleapis.com/css?family=Righteous)',\n            'url(https://fonts.googleapis.com/css?family=Roboto+Mono)'\n        ],\n        container: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            alignItems: 'center'\n        },\n        pageContainer: (_a = {\n                width: '1200px',\n                maxWidth: '100%',\n                padding: '0 32px'\n            },\n            _a[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                padding: '0 16px',\n            },\n            _a),\n        text: {\n            color: 'white'\n        },\n        descriptionRow: {\n            flexDirection: 'column',\n            textAlign: 'center',\n            padding: '16px 0'\n        },\n        inviteButtons: {\n            textAlign: 'center',\n            padding: '32px 0'\n        },\n        inviteButton: {\n            margin: '8px',\n            color: theme.palette.primary.contrastText,\n            backgroundColor: orange/* default */.A[800],\n            '&:hover': {\n                backgroundColor: orange/* default */.A[900]\n            }\n        },\n        dividerRow: {\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        },\n        divider: {\n            flexGrow: 1,\n            margin: '16px'\n        }\n    });\n});\nvar BronyaPage = function (props) {\n    var classes = bronya_useStyles({});\n    var updateHeight = props.updateHeight;\n    return (react.createElement(\"div\", { className: classes.container },\n        react.createElement(Grid/* default */.A, { container: true, direction: 'column', alignItems: 'center', classes: { container: classes.pageContainer } },\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.descriptionRow } },\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, \"Bronya is a valkyrie chatbot that are reserved for our patreon supporter.\"),\n                react.createElement(Typography/* default */.A, { variant: 'body1', classes: { root: classes.text } }, \"If you want to chat with Bronya, just tag her.\")),\n            react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.inviteButtons } },\n                react.createElement(Button/* default */.A, { classes: { root: classes.inviteButton }, variant: 'contained', size: 'large', href: 'https://www.patreon.com/user?u=10662508' }, \"SUPPORT US\")),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"FEATURES\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(demo_section, { demos: [{\n                        headline: 'Music Player',\n                        description: [\n                            \"Bronya uses her Project Bunny 19C to play u the best honkai music.\"\n                        ],\n                        image: music_demo_namespaceObject\n                    }], color: orange/* default */.A[400] }),\n            react.createElement(Grid/* default */.A, { container: true, classes: { container: classes.dividerRow } },\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } }),\n                react.createElement(Typography/* default */.A, { variant: 'h5', classes: { root: classes.text } }, \"COMMANDS\"),\n                react.createElement(Divider/* default */.A, { classes: { root: classes.divider } })),\n            react.createElement(command_section, { name: 'Bronya', helps: bronya(\"!\"), color: orange/* default */.A[300], updateHeight: updateHeight }))));\n};\n/* harmony default export */ const landing_bronya = (BronyaPage);\n\n;// ./src/client/components/landing/index.tsx\nvar landing_assign = (undefined && undefined.__assign) || function () {\n    landing_assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return landing_assign.apply(this, arguments);\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar landing_useStyles = (0,makeStyles/* default */.A)(function (theme) {\n    var _a;\n    return (landing_assign(landing_assign(landing_assign({ '@import': [\n            'url(https://fonts.googleapis.com/css?family=Righteous)',\n            'url(https://fonts.googleapis.com/css?family=Roboto+Mono)'\n        ], container: {\n            width: '100vw',\n            minHeight: '100vh',\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n        }, headerContainer: {\n            width: '100vw',\n            position: 'relative',\n            overflow: 'hidden'\n        }, pageContainer: (_a = {\n                width: '1200px',\n                maxWidth: '100%',\n                padding: '0 32px'\n            },\n            _a[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                padding: '0 16px',\n            },\n            _a) }, [{\n            name: 'aiChan',\n            width: 300,\n            bottom: 73\n        }, {\n            name: 'kiana',\n            width: 420,\n            left: 50,\n            bottom: 50\n        }, {\n            name: 'mei',\n            width: 420,\n            left: 80,\n            bottom: 50\n        }, {\n            name: 'bronya',\n            width: 420,\n            left: 70,\n            bottom: 50\n        }].reduce(function (styles, character) {\n        var _a, _b;\n        return (landing_assign(landing_assign({}, styles), (_a = {}, _a[character.name + 'Welcome'] = landing_assign({ width: \"\".concat(character.width, \"px\"), marginBottom: \"-\".concat(character.bottom, \"px\") }, character.left ? (_b = {\n                marginLeft: \"-\".concat(character.left, \"px\")\n            },\n            _b[\"@media (max-width:\".concat(theme.breakpoints.values.sm, \"px)\")] = {\n                marginLeft: '0',\n            },\n            _b) : {}), _a)));\n    }, {\n        aiChanWelcome: {},\n        kianaWelcome: {},\n        meiWelcome: {},\n        bronyaWelcome: {}\n    })), [{\n            name: 'aiChan',\n            color: green/* default */.A\n        }, {\n            name: 'kiana',\n            color: yellow/* default */.A\n        }, {\n            name: 'mei',\n            color: purple/* default */.A\n        }, {\n            name: 'bronya',\n            color: orange/* default */.A\n        }].reduce(function (styles, character) {\n        var _a;\n        return (landing_assign(landing_assign({}, styles), (_a = {}, _a[character.name + 'Button'] = {\n            color: 'black',\n            backgroundColor: character.color[100],\n            '&:hover': {\n                backgroundColor: character.color[200]\n            }\n        }, _a[character.name + 'ButtonFocus'] = {\n            color: 'white',\n            backgroundColor: character.color[800],\n            '&:hover': {\n                backgroundColor: character.color[900]\n            }\n        }, _a)));\n    }, {\n        aiChanButton: {},\n        aiChanButtonFocus: {},\n        kianaButton: {},\n        kianaButtonFocus: {},\n        meiButton: {},\n        meiButtonFocus: {},\n        bronyaButton: {},\n        bronyaButtonFocus: {}\n    })), { dividerButtons: {\n            transform: 'translateY(-36px)'\n        }, views: {\n            width: '100vw'\n        }, link: {\n            color: 'inherit',\n            textDecoration: 'none'\n        }, footer: {\n            width: '100vw',\n            padding: '16px 0',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            background: grey/* default */.A[900]\n        }, footerText: {\n            transition: 'color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms'\n        } }));\n});\nvar LandingPage = function () {\n    var _a = react.useState({\n        option: 'ai',\n        color: 'black',\n        updateHeight: undefined\n    }), state = _a[0], setState = _a[1];\n    react.useEffect(function () {\n        document.querySelector('body').style.background = grey/* default */.A[800];\n        window.addEventListener('scroll', onScroll);\n        return function () {\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, []);\n    var loadUpdateHeight = function (updateHeight) {\n        setState(landing_assign(landing_assign({}, state), { updateHeight: updateHeight }));\n    };\n    var onScroll = function () {\n        var _a;\n        var body = document.querySelector('body');\n        if (window.innerHeight + window.scrollY >= body.offsetHeight - 300) {\n            (_a = state.updateHeight) === null || _a === void 0 ? void 0 : _a.call(state);\n        }\n    };\n    var changeOption = function (option) {\n        setState(landing_assign(landing_assign({}, state), { option: option }));\n    };\n    var switchView = function (index) {\n        setState(landing_assign(landing_assign({}, state), { option: ['ai', 'kiana', 'mei', 'bronya'][index] }));\n    };\n    var getForegroundColor = function () {\n        var option = state.option;\n        switch (option) {\n            case 'ai':\n                return green/* default */.A[400];\n            case 'kiana':\n                return yellow/* default */.A[400];\n            case 'mei':\n                return purple/* default */.A[400];\n            case 'bronya':\n                return orange/* default */.A[400];\n        }\n    };\n    var getBackgroundColor = function () {\n        var option = state.option;\n        switch (option) {\n            case 'ai':\n                return { from: '#A5D6A7', to: '#E6EE9C' };\n            case 'kiana':\n                return { from: '#FFF59D', to: '#FFFF8D' };\n            case 'mei':\n                return { from: '#CE93D8', to: '#9FA8DA' };\n            case 'bronya':\n                return { from: '#FFE082', to: '#FFAB91' };\n        }\n    };\n    var classes = landing_useStyles({});\n    var option = state.option, updateHeight = state.updateHeight;\n    return (react.createElement(\"div\", { className: classes.container },\n        react.createElement(\"div\", { className: classes.headerContainer },\n            react.createElement(header_background, { color: getBackgroundColor() }),\n            react.createElement(header_blocks, { selected: option, characters: [{\n                        key: 'ai',\n                        name: 'Ai Chan',\n                        image: { src: ai_chan_namespaceObject, className: classes.aiChanWelcome },\n                        color: { primary: green/* default */.A[800], secondary: green/* default */.A[500] }\n                    }, {\n                        key: 'kiana',\n                        name: 'Kiana\\nKaslana',\n                        image: { src: kiana_namespaceObject, className: classes.kianaWelcome },\n                        color: { primary: yellow/* default */.A[800], secondary: yellow/* default */.A[600] }\n                    }, {\n                        key: 'mei',\n                        name: 'Raiden\\nMei',\n                        image: { src: mei_namespaceObject, className: classes.meiWelcome },\n                        color: { primary: purple/* default */.A[800], secondary: purple/* default */.A[500] }\n                    }, {\n                        key: 'bronya',\n                        name: 'Bronya\\nZaychik',\n                        image: { src: bronya_namespaceObject, className: classes.bronyaWelcome },\n                        color: { primary: orange/* default */.A[800], secondary: orange/* default */.A[500] }\n                    }] })),\n        react.createElement(Grid/* default */.A, { container: true, justify: 'center', classes: { container: classes.dividerButtons } },\n            react.createElement(avatar_buttons, { selected: option, buttons: [{\n                        key: 'ai',\n                        image: avatar_ai_chan_namespaceObject,\n                        color: { primary: classes.aiChanButtonFocus, secondary: classes.aiChanButton }\n                    }, {\n                        key: 'kiana',\n                        image: avatar_kiana_namespaceObject,\n                        color: { primary: classes.kianaButtonFocus, secondary: classes.kianaButton }\n                    }, {\n                        key: 'mei',\n                        image: avatar_mei_namespaceObject,\n                        color: { primary: classes.meiButtonFocus, secondary: classes.meiButton }\n                    }, {\n                        key: 'bronya',\n                        image: avatar_bronya_namespaceObject,\n                        color: { primary: classes.bronyaButtonFocus, secondary: classes.bronyaButton }\n                    }].map(function (character) { return (landing_assign(landing_assign({}, character), { onClick: function () { return changeOption(character.key); } })); }) })),\n        react.createElement(lib/* default */.Ay, { className: classes.views, animateHeight: true, action: (function (hooks) { return loadUpdateHeight(hooks.updateHeight); }), index: ['ai', 'kiana', 'mei', 'bronya'].indexOf(option), onChangeIndex: switchView },\n            react.createElement(landing_ai_chan, { updateHeight: updateHeight }),\n            react.createElement(landing_kiana, { updateHeight: updateHeight }),\n            react.createElement(landing_mei, { updateHeight: updateHeight }),\n            react.createElement(landing_bronya, { updateHeight: updateHeight })),\n        react.createElement(\"div\", { className: classes.footer },\n            react.createElement(Grid/* default */.A, { container: true, justify: 'space-between', alignItems: 'center', classes: { container: classes.pageContainer } },\n                react.createElement(Typography/* default */.A, { variant: 'caption', classes: { root: classes.footerText }, style: { color: getForegroundColor() } }, \"Developed by: Ching Yaw Hao, RaikireHiuduo, Lucatiel, Lil'Cookie\"),\n                react.createElement(Typography/* default */.A, { variant: 'caption', classes: { root: classes.footerText }, style: { color: getForegroundColor() } },\n                    react.createElement(\"a\", { className: classes.link, href: '/terms-of-use' }, \"Terms of Use\"))))));\n};\n/* harmony default export */ const landing = (LandingPage);\n\n\n//# sourceURL=webpack://ai-chan-landing/./src/client/components/landing/index.tsx_+_33_modules?\n}")}}]);